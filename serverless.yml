service: token

# use the stage from the cli if provided, otherwise fallback to the one in provider
custom:
  myStage: ${opt:stage, self:provider.stage}
  tableName: ${self:service}_${self:custom.myStage}_tokens

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
  environment:
    TABLE_NAME: ${self:custom.tableName}

  stage: dev
  region: eu-west-1

package:
  exclude:
    - .idea/**
    - .npmignore
    - package.json
    - node_modules/**
    - tests/**
    - docs/**
    - README.md

functions:
  add:
    handler: functions/add.handler
    events:
      - http:
          path: /tokens/{id}
          method: put
  get:
    handler: functions/get.handler
    events:
      - http:
          path: /tokens/{id}
          method: get
  patch:
    handler: functions/patch.handler
    events:
      - http:
          path: /tokens/{id}
          method: patch
  delete:
    handler: functions/delete.handler
    events:
      - http:
          path: /tokens/{id}
          method: delete

resources:
  Resources:
    tokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
